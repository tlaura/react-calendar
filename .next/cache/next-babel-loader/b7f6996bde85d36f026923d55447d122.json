{"ast":null,"code":"var _jsxFileName = \"/Users/work/Desktop/coding-interviews/calendar/components/Calendar/Calendar.js\";\nvar __jsx = React.createElement;\nimport moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { TableCell } from \"@material-ui/core\";\n\nconst firstDayOfMonth = dateObj => moment(dateObj).startOf(\"month\").format(\"d\");\n\nexport default function Calendar() {\n  const {\n    0: currentDate,\n    1: setCurrentDate\n  } = useState(moment());\n  const firstDay = firstDayOfMonth(currentDate);\n  const emptyCellsBeforeMonth = Array(firstDay).fill(__jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 54\n    }\n  }));\n  let daysInMonth = [];\n\n  for (let i = 1; i <= currentDate.daysInMonth(); i++) {\n    daysInMonth.push(__jsx(TableCell, {\n      key: i,\n      className: \"calendar-day\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, i));\n  }\n\n  var totalSlots = [...emptyCellsBeforeMonth, ...daysInMonth];\n  let rows = [];\n  let counter = 0;\n\n  while (counter < totalSlots.length) {\n    const week = totalSlots.slice(counter, counter + 7);\n    rows.push(week);\n    counter += 7;\n  }\n\n  let daysinmonth = rows.map((d, i) => {\n    return __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 12\n      }\n    }, d);\n  });\n  const weekdayshort = moment.weekdaysShort();\n  let weekday = weekdayshort.map(day => __jsx(\"th\", {\n    key: day,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 43\n    }\n  }, day));\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(\"table\", {\n    className: \"calendar-day\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, weekday)), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, daysinmonth)));\n}","map":{"version":3,"sources":["/Users/work/Desktop/coding-interviews/calendar/components/Calendar/Calendar.js"],"names":["moment","React","useState","TableCell","firstDayOfMonth","dateObj","startOf","format","Calendar","currentDate","setCurrentDate","firstDay","emptyCellsBeforeMonth","Array","fill","daysInMonth","i","push","totalSlots","rows","counter","length","week","slice","daysinmonth","map","d","weekdayshort","weekdaysShort","weekday","day"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,mBAA1B;;AAEA,MAAMC,eAAe,GAAIC,OAAD,IACtBL,MAAM,CAACK,OAAD,CAAN,CAAgBC,OAAhB,CAAwB,OAAxB,EAAiCC,MAAjC,CAAwC,GAAxC,CADF;;AAGA,eAAe,SAASC,QAAT,GAAoB;AACjC,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCR,QAAQ,CAACF,MAAM,EAAP,CAA9C;AAEA,QAAMW,QAAQ,GAAGP,eAAe,CAACK,WAAD,CAAhC;AACA,QAAMG,qBAAqB,GAAGC,KAAK,CAACF,QAAD,CAAL,CAAgBG,IAAhB,CAAqB,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB,CAA9B;AAEA,MAAIC,WAAW,GAAG,EAAlB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIP,WAAW,CAACM,WAAZ,EAArB,EAAgDC,CAAC,EAAjD,EAAqD;AACnDD,IAAAA,WAAW,CAACE,IAAZ,CACE,MAAC,SAAD;AAAW,MAAA,GAAG,EAAED,CAAhB;AAAmB,MAAA,SAAS,EAAC,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,CADH,CADF;AAKD;;AACD,MAAIE,UAAU,GAAG,CAAC,GAAGN,qBAAJ,EAA2B,GAAGG,WAA9B,CAAjB;AAEA,MAAII,IAAI,GAAG,EAAX;AAEA,MAAIC,OAAO,GAAG,CAAd;;AACA,SAAOA,OAAO,GAAGF,UAAU,CAACG,MAA5B,EAAoC;AAClC,UAAMC,IAAI,GAAGJ,UAAU,CAACK,KAAX,CAAiBH,OAAjB,EAA0BA,OAAO,GAAG,CAApC,CAAb;AACAD,IAAAA,IAAI,CAACF,IAAL,CAAUK,IAAV;AACAF,IAAAA,OAAO,IAAI,CAAX;AACD;;AAED,MAAII,WAAW,GAAGL,IAAI,CAACM,GAAL,CAAS,CAACC,CAAD,EAAIV,CAAJ,KAAU;AACnC,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKU,CAAL,CAAP;AACD,GAFiB,CAAlB;AAIA,QAAMC,YAAY,GAAG3B,MAAM,CAAC4B,aAAP,EAArB;AACA,MAAIC,OAAO,GAAGF,YAAY,CAACF,GAAb,CAAkBK,GAAD,IAAS;AAAI,IAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeA,GAAf,CAA1B,CAAd;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,OAAL,CADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQL,WAAR,CAJF,CADF,CADF;AAUD","sourcesContent":["import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { TableCell } from \"@material-ui/core\";\n\nconst firstDayOfMonth = (dateObj) =>\n  moment(dateObj).startOf(\"month\").format(\"d\");\n\nexport default function Calendar() {\n  const [currentDate, setCurrentDate] = useState(moment());\n\n  const firstDay = firstDayOfMonth(currentDate);\n  const emptyCellsBeforeMonth = Array(firstDay).fill(<TableCell />);\n\n  let daysInMonth = [];\n  for (let i = 1; i <= currentDate.daysInMonth(); i++) {\n    daysInMonth.push(\n      <TableCell key={i} className=\"calendar-day\">\n        {i}\n      </TableCell>\n    );\n  }\n  var totalSlots = [...emptyCellsBeforeMonth, ...daysInMonth];\n\n  let rows = [];\n\n  let counter = 0;\n  while (counter < totalSlots.length) {\n    const week = totalSlots.slice(counter, counter + 7);\n    rows.push(week);\n    counter += 7;\n  }\n\n  let daysinmonth = rows.map((d, i) => {\n    return <tr>{d}</tr>;\n  });\n\n  const weekdayshort = moment.weekdaysShort();\n  let weekday = weekdayshort.map((day) => <th key={day}>{day}</th>);\n\n  return (\n    <div>\n      <table className=\"calendar-day\">\n        <thead>\n          <tr>{weekday}</tr>\n        </thead>\n        <tbody>{daysinmonth}</tbody>\n      </table>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}