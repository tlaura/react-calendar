{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/work/Desktop/coding-interviews/calendar/components/Calendar/Calendar.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { TableCell } from \"@material-ui/core\";\n\nvar firstDayOfMonth = function firstDayOfMonth(dateObj) {\n  return moment(dateObj).startOf(\"month\").format(\"d\");\n};\n\nexport default function Calendar() {\n  _s();\n\n  var _this = this;\n\n  var weekdayshort = moment.weekdaysShort();\n\n  var _useState = useState(moment()),\n      currentDate = _useState[0],\n      setCurrentDate = _useState[1];\n\n  var firstDay = firstDayOfMonth(currentDate);\n  var emptyCellsBeforeMonth = Array(firstDay).fill(__jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 54\n    }\n  }));\n  var daysInMonth = [];\n\n  for (var i = 1; i <= currentDate.daysInMonth(); i++) {\n    daysInMonth.push(__jsx(TableCell, {\n      key: i,\n      className: \"calendar-day\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, i));\n  }\n\n  var totalSlots = [].concat(_toConsumableArray(emptyCellsBeforeMonth), daysInMonth);\n  var rows = [];\n  var cells = [];\n  totalSlots.forEach(function (row, i) {\n    if (i % 7 !== 0) {\n      cells.push(row);\n    } else {\n      rows.push(cells);\n      cells = [];\n      cells.push(row);\n    }\n\n    if (i === totalSlots.length - 1) {\n      rows.push(cells);\n    }\n  });\n  var daysinmonth = rows.map(function (d, i) {\n    return __jsx(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 12\n      }\n    }, d);\n  });\n  var weekday = weekdayshort.map(function (day) {\n    return __jsx(\"th\", {\n      key: day,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 43\n      }\n    }, day);\n  });\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, __jsx(\"table\", {\n    className: \"calendar-day\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, weekday)), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, daysinmonth)));\n}\n\n_s(Calendar, \"BUilyegn1iHQlzg9x/p8lMQPuNs=\");\n\n_c = Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/Users/work/Desktop/coding-interviews/calendar/components/Calendar/Calendar.js"],"names":["moment","React","useState","TableCell","firstDayOfMonth","dateObj","startOf","format","Calendar","weekdayshort","weekdaysShort","currentDate","setCurrentDate","firstDay","emptyCellsBeforeMonth","Array","fill","daysInMonth","i","push","totalSlots","rows","cells","forEach","row","length","daysinmonth","map","d","weekday","day"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,mBAA1B;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,OAAD;AAAA,SACtBL,MAAM,CAACK,OAAD,CAAN,CAAgBC,OAAhB,CAAwB,OAAxB,EAAiCC,MAAjC,CAAwC,GAAxC,CADsB;AAAA,CAAxB;;AAGA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAAA;;AACjC,MAAMC,YAAY,GAAGT,MAAM,CAACU,aAAP,EAArB;;AADiC,kBAEKR,QAAQ,CAACF,MAAM,EAAP,CAFb;AAAA,MAE1BW,WAF0B;AAAA,MAEbC,cAFa;;AAIjC,MAAMC,QAAQ,GAAGT,eAAe,CAACO,WAAD,CAAhC;AACA,MAAMG,qBAAqB,GAAGC,KAAK,CAACF,QAAD,CAAL,CAAgBG,IAAhB,CAAqB,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB,CAA9B;AAEA,MAAIC,WAAW,GAAG,EAAlB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIP,WAAW,CAACM,WAAZ,EAArB,EAAgDC,CAAC,EAAjD,EAAqD;AACnDD,IAAAA,WAAW,CAACE,IAAZ,CACE,MAAC,SAAD;AAAW,MAAA,GAAG,EAAED,CAAhB;AAAmB,MAAA,SAAS,EAAC,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,CADH,CADF;AAKD;;AACD,MAAIE,UAAU,gCAAON,qBAAP,GAAiCG,WAAjC,CAAd;AAEA,MAAII,IAAI,GAAG,EAAX;AACA,MAAIC,KAAK,GAAG,EAAZ;AAEAF,EAAAA,UAAU,CAACG,OAAX,CAAmB,UAACC,GAAD,EAAMN,CAAN,EAAY;AAC7B,QAAIA,CAAC,GAAG,CAAJ,KAAU,CAAd,EAAiB;AACfI,MAAAA,KAAK,CAACH,IAAN,CAAWK,GAAX;AACD,KAFD,MAEO;AACLH,MAAAA,IAAI,CAACF,IAAL,CAAUG,KAAV;AACAA,MAAAA,KAAK,GAAG,EAAR;AACAA,MAAAA,KAAK,CAACH,IAAN,CAAWK,GAAX;AACD;;AACD,QAAIN,CAAC,KAAKE,UAAU,CAACK,MAAX,GAAoB,CAA9B,EAAiC;AAC/BJ,MAAAA,IAAI,CAACF,IAAL,CAAUG,KAAV;AACD;AACF,GAXD;AAaA,MAAII,WAAW,GAAGL,IAAI,CAACM,GAAL,CAAS,UAACC,CAAD,EAAIV,CAAJ,EAAU;AACnC,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKU,CAAL,CAAP;AACD,GAFiB,CAAlB;AAIA,MAAIC,OAAO,GAAGpB,YAAY,CAACkB,GAAb,CAAiB,UAACG,GAAD;AAAA,WAAS;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeA,GAAf,CAAT;AAAA,GAAjB,CAAd;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,OAAL,CADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQH,WAAR,CAJF,CADF,CADF;AAUD;;GAjDuBlB,Q;;KAAAA,Q","sourcesContent":["import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { TableCell } from \"@material-ui/core\";\n\nconst firstDayOfMonth = (dateObj) =>\n  moment(dateObj).startOf(\"month\").format(\"d\");\n\nexport default function Calendar() {\n  const weekdayshort = moment.weekdaysShort();\n  const [currentDate, setCurrentDate] = useState(moment());\n\n  const firstDay = firstDayOfMonth(currentDate);\n  const emptyCellsBeforeMonth = Array(firstDay).fill(<TableCell />);\n\n  let daysInMonth = [];\n  for (let i = 1; i <= currentDate.daysInMonth(); i++) {\n    daysInMonth.push(\n      <TableCell key={i} className=\"calendar-day\">\n        {i}\n      </TableCell>\n    );\n  }\n  var totalSlots = [...emptyCellsBeforeMonth, ...daysInMonth];\n\n  let rows = [];\n  let cells = [];\n\n  totalSlots.forEach((row, i) => {\n    if (i % 7 !== 0) {\n      cells.push(row);\n    } else {\n      rows.push(cells);\n      cells = [];\n      cells.push(row);\n    }\n    if (i === totalSlots.length - 1) {\n      rows.push(cells);\n    }\n  });\n\n  let daysinmonth = rows.map((d, i) => {\n    return <tr>{d}</tr>;\n  });\n\n  let weekday = weekdayshort.map((day) => <th key={day}>{day}</th>);\n\n  return (\n    <div>\n      <table className=\"calendar-day\">\n        <thead>\n          <tr>{weekday}</tr>\n        </thead>\n        <tbody>{daysinmonth}</tbody>\n      </table>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}