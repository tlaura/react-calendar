{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/work/Desktop/coding-interviews/calendar/components/Calendar/Calendar.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { TableCell } from \"@material-ui/core\";\n\nvar firstDayOfMonth = function firstDayOfMonth(dateObj) {\n  return moment(dateObj).startOf(\"month\").format(\"d\");\n};\n\nexport default function Calendar() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(moment()),\n      currentDate = _useState[0],\n      setCurrentDate = _useState[1];\n\n  var firstDay = firstDayOfMonth(currentDate);\n  var emptyCellsBeforeMonth = Array(firstDay).fill(__jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 54\n    }\n  }));\n  var daysInMonth = [];\n\n  for (var i = 1; i <= currentDate.daysInMonth(); i++) {\n    daysInMonth.push(__jsx(TableCell, {\n      key: i,\n      className: \"calendar-day\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, i));\n  }\n\n  var totalSlots = [].concat(_toConsumableArray(emptyCellsBeforeMonth), daysInMonth);\n  var rows = [];\n  var counter = 0;\n\n  while (counter < totalSlots.length) {\n    var week = totalSlots.slice(counter, counter + 7);\n    rows.push(week);\n    counter += 7;\n  }\n\n  var daysinmonth = rows.map(function (d, i) {\n    return __jsx(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 12\n      }\n    }, d);\n  });\n  var weekdayshort = moment.weekdaysShort();\n  var weekday = weekdayshort.map(function (day) {\n    return __jsx(\"th\", {\n      key: day,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 43\n      }\n    }, day);\n  });\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, __jsx(\"table\", {\n    className: \"calendar-day\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, weekday)), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, daysinmonth)));\n}\n\n_s(Calendar, \"BUilyegn1iHQlzg9x/p8lMQPuNs=\");\n\n_c = Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/Users/work/Desktop/coding-interviews/calendar/components/Calendar/Calendar.js"],"names":["moment","React","useState","TableCell","firstDayOfMonth","dateObj","startOf","format","Calendar","currentDate","setCurrentDate","firstDay","emptyCellsBeforeMonth","Array","fill","daysInMonth","i","push","totalSlots","rows","counter","length","week","slice","daysinmonth","map","d","weekdayshort","weekdaysShort","weekday","day"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,mBAA1B;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,OAAD;AAAA,SACtBL,MAAM,CAACK,OAAD,CAAN,CAAgBC,OAAhB,CAAwB,OAAxB,EAAiCC,MAAjC,CAAwC,GAAxC,CADsB;AAAA,CAAxB;;AAGA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAAA;;AAAA,kBACKN,QAAQ,CAACF,MAAM,EAAP,CADb;AAAA,MAC1BS,WAD0B;AAAA,MACbC,cADa;;AAGjC,MAAMC,QAAQ,GAAGP,eAAe,CAACK,WAAD,CAAhC;AACA,MAAMG,qBAAqB,GAAGC,KAAK,CAACF,QAAD,CAAL,CAAgBG,IAAhB,CAAqB,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB,CAA9B;AAEA,MAAIC,WAAW,GAAG,EAAlB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIP,WAAW,CAACM,WAAZ,EAArB,EAAgDC,CAAC,EAAjD,EAAqD;AACnDD,IAAAA,WAAW,CAACE,IAAZ,CACE,MAAC,SAAD;AAAW,MAAA,GAAG,EAAED,CAAhB;AAAmB,MAAA,SAAS,EAAC,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,CADH,CADF;AAKD;;AACD,MAAIE,UAAU,gCAAON,qBAAP,GAAiCG,WAAjC,CAAd;AACA,MAAII,IAAI,GAAG,EAAX;AAEA,MAAIC,OAAO,GAAG,CAAd;;AACA,SAAOA,OAAO,GAAGF,UAAU,CAACG,MAA5B,EAAoC;AAClC,QAAMC,IAAI,GAAGJ,UAAU,CAACK,KAAX,CAAiBH,OAAjB,EAA0BA,OAAO,GAAG,CAApC,CAAb;AACAD,IAAAA,IAAI,CAACF,IAAL,CAAUK,IAAV;AACAF,IAAAA,OAAO,IAAI,CAAX;AACD;;AAED,MAAII,WAAW,GAAGL,IAAI,CAACM,GAAL,CAAS,UAACC,CAAD,EAAIV,CAAJ,EAAU;AACnC,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKU,CAAL,CAAP;AACD,GAFiB,CAAlB;AAIA,MAAMC,YAAY,GAAG3B,MAAM,CAAC4B,aAAP,EAArB;AACA,MAAIC,OAAO,GAAGF,YAAY,CAACF,GAAb,CAAiB,UAACK,GAAD;AAAA,WAAS;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeA,GAAf,CAAT;AAAA,GAAjB,CAAd;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,OAAL,CADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQL,WAAR,CAJF,CADF,CADF;AAUD;;GAzCuBhB,Q;;KAAAA,Q","sourcesContent":["import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { TableCell } from \"@material-ui/core\";\n\nconst firstDayOfMonth = (dateObj) =>\n  moment(dateObj).startOf(\"month\").format(\"d\");\n\nexport default function Calendar() {\n  const [currentDate, setCurrentDate] = useState(moment());\n\n  const firstDay = firstDayOfMonth(currentDate);\n  const emptyCellsBeforeMonth = Array(firstDay).fill(<TableCell />);\n\n  let daysInMonth = [];\n  for (let i = 1; i <= currentDate.daysInMonth(); i++) {\n    daysInMonth.push(\n      <TableCell key={i} className=\"calendar-day\">\n        {i}\n      </TableCell>\n    );\n  }\n  var totalSlots = [...emptyCellsBeforeMonth, ...daysInMonth];\n  let rows = [];\n\n  let counter = 0;\n  while (counter < totalSlots.length) {\n    const week = totalSlots.slice(counter, counter + 7);\n    rows.push(week);\n    counter += 7;\n  }\n\n  let daysinmonth = rows.map((d, i) => {\n    return <tr>{d}</tr>;\n  });\n\n  const weekdayshort = moment.weekdaysShort();\n  let weekday = weekdayshort.map((day) => <th key={day}>{day}</th>);\n\n  return (\n    <div>\n      <table className=\"calendar-day\">\n        <thead>\n          <tr>{weekday}</tr>\n        </thead>\n        <tbody>{daysinmonth}</tbody>\n      </table>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}